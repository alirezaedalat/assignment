{
	"info": {
		"_postman_id": "fa6bf0f8-9ea3-4e95-836a-3273f78a7a43",
		"name": "assignment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Search for the user with username “Delphine”",
							"",
							"",
							"//Test status code ",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"//Test code name has string",
							"",
							"pm.test(\"Status code name has string\", function () {",
							"    pm.response.to.have.status('OK');",
							"});",
							"",
							"",
							"",
							"// Body matches string validations for id",
							"",
							"pm.test(\"Body matches id\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"id\");",
							"});",
							"",
							"// Body matches string validations for name",
							"",
							"pm.test(\"Body matches name\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"name\");",
							"});",
							"",
							"// Body matches string validations for username",
							"",
							"pm.test(\"Body matches  Delphine \", function () {",
							"    pm.expect(pm.response.text()).to.include(\"username\");",
							"});",
							"",
							"// Body matches string validations for email",
							"",
							"pm.test(\"Body matches  email \", function () {",
							"    pm.expect(pm.response.text()).to.include(\"email\");",
							"});",
							"",
							"// Body matches string validations for address",
							"",
							"pm.test(\"Body matches  address \", function () {",
							"    pm.expect(pm.response.text()).to.include(\"address\");",
							"});",
							"",
							"// Body matches string validations for street",
							"",
							"pm.test(\"Body matches  street \", function () {",
							"    pm.expect(pm.response.text()).to.include(\"street\");",
							"});",
							"",
							"// Body matches string validations for suite",
							"",
							"pm.test(\"Body matches  suite \", function () {",
							"    pm.expect(pm.response.text()).to.include(\"suite\");",
							"});",
							"",
							"// Body matches string validations for city",
							"",
							"pm.test(\"Body matches  city \", function () {",
							"    pm.expect(pm.response.text()).to.include(\"city\");",
							"});",
							"",
							"// Body matches string validations for zipcode",
							"",
							"pm.test(\"Body matches  zipcode \", function () {",
							"    pm.expect(pm.response.text()).to.include(\"zipcode\");",
							"});",
							"",
							"// Body matches string validations for geo",
							"",
							"pm.test(\"Body matches  geo \", function () {",
							"    pm.expect(pm.response.text()).to.include(\"geo\");",
							"});",
							"",
							"// Body matches string validations for lat",
							"",
							"pm.test(\"Body matches  lat \", function () {",
							"    pm.expect(pm.response.text()).to.include(\"lat\");",
							"});",
							"",
							"// Body matches string validations for lng",
							"",
							"pm.test(\"Body matches  lng \", function () {",
							"    pm.expect(pm.response.text()).to.include(\"lng\");",
							"});",
							"",
							"// Body matches string validations for phone",
							"",
							"pm.test(\"Body matches  phone \", function () {",
							"    pm.expect(pm.response.text()).to.include(\"phone\");",
							"});",
							"",
							"",
							"// Body matches string validations for website",
							"",
							"pm.test(\"Body matches  website \", function () {",
							"    pm.expect(pm.response.text()).to.include(\"website\");",
							"});",
							"",
							"// Body matches string validations for company",
							"",
							"pm.test(\"Body matches  company \", function () {",
							"    pm.expect(pm.response.text()).to.include(\"company\");",
							"});",
							"",
							"// Body matches string validations for company name",
							"",
							"pm.test(\"Body matches  name \", function () {",
							"    pm.expect(pm.response.text()).to.include(\"name\");",
							"});",
							"",
							"// Body matches string validations for company catchPhrase",
							"",
							"pm.test(\"Body matches  catchPhrase \", function () {",
							"    pm.expect(pm.response.text()).to.include(\"catchPhrase\");",
							"});",
							"",
							"// Body matches string validations for company bs",
							"",
							"pm.test(\"Body matches  bs \", function () {",
							"    pm.expect(pm.response.text()).to.include(\"bs\");",
							"});",
							"",
							"",
							"//Test id",
							"",
							"pm.test(\" Test id\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.be.not.null;",
							"});",
							"",
							"//Test name",
							"",
							"pm.test(\" Test name\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.be.not.null;",
							"});",
							"",
							"",
							"//Test username",
							"",
							"pm.test(\" Test username\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.username).to.eql(pm.environment.get(\"username\"));",
							"});",
							"",
							"//Test street",
							"",
							"pm.test(\" Test street\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData[0].address.street).to.be.not.null;",
							"});",
							"",
							"",
							"//Test suite",
							"",
							" pm.test(\" Test suite\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData[0].address.suite).to.be.not.null;",
							"});",
							"",
							"//Test city",
							"",
							" pm.test(\" Test city\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData[0].address.city).to.be.not.null;",
							"});",
							"",
							"//Test city",
							"",
							" pm.test(\" Test zipcode\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData[0].address.zipcode).to.be.not.null;",
							"});",
							"",
							"//Test lat",
							"",
							" pm.test(\" Test lat\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData[0].address.geo.lat).to.be.not.null;",
							"});",
							"",
							"//Test lngs",
							"",
							" pm.test(\" Test lng\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData[0].address.geo.lng).to.be.not.null;",
							"});",
							"",
							"//Test phone",
							"",
							"pm.test(\" Test phone\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.phone).to.be.not.null;",
							"});",
							"",
							"// Test website",
							"",
							"pm.test(\" Test website\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.website).to.be.not.null;",
							"});",
							"",
							"//Test name of company",
							"",
							"pm.test(\" Test name of company\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData[0].company.name).to.be.not.null;",
							"});",
							"",
							"//Test catchPhrase of company",
							"",
							"pm.test(\" Test catchPhrase of company\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData[0].company.catchPhrase).to.be.not.null;",
							"});",
							"",
							"",
							"//Test catchPhrase of company",
							"",
							"pm.test(\" Test catchPhrase of company\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData[0].company.catchPhrase).to.be.not.null;",
							"});",
							"",
							"//Test bs of company",
							"",
							"pm.test(\" Test bs of company\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData[0].company.bs).to.be.not.null;",
							"});",
							"",
							"",
							"// get username id from reposene --- username = “Delphine”",
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"usernameId\", jsonData[0].id);",
							"",
							"//  get username email from reposene --- username = “Delphine”",
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"usernameEmail\", jsonData[0].email);",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//set environment for username ",
							"",
							"let username = \"Delphine\";",
							"pm.collectionVariables.set(\"username\",username);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users?username={{username}}",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "username",
							"value": "{{username}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "posts",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//Use the details fetched to make a search for the posts written by the",
							"//user.",
							"",
							"//get username  environment",
							"",
							"pm.environment.get(\"usernameId\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Test status code",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//Test Status code name has string",
							"",
							"pm.test(\"Status code name has string\", function () {",
							"    pm.response.to.have.status('OK');",
							"});",
							"",
							"",
							"",
							"//Test  userId",
							"",
							"pm.test(\" Test userId\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData[0,1,2,3,4,5,6,8,9].userId).to.eql(pm.environment.get(\"usernameId\"));",
							"});",
							"",
							"//Test  id",
							"",
							"pm.test(\" Test id\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData[0,1,2,3,4,5,6,8,9].userId).to.be.not.null;",
							"});",
							"",
							"//Test  title",
							"",
							"pm.test(\" Test title\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData[0,1,2,3,4,5,6,8,9].title).to.be.not.null;",
							"});",
							"",
							"//Test  body",
							"",
							"pm.test(\" Test title\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData[0,1,2,3,4,5,6,8,9].body).to.be.not.null;",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts?userId={{usernameId}}",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					],
					"query": [
						{
							"key": "userId",
							"value": "{{usernameId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "username",
			"value": ""
		}
	]
}